org: udacitynguyen
app: serverless-todo-app
service: serverless-todo-app

plugins:
  - serverless-iam-roles-per-function

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    TODOS_TABLE: Todos-${self:provider.stage}
    TODOS_CREATED_AT_INDEX: CreatedAtIndex
    ATTACHMENTS_S3_BUCKET: minh-todos-attachments

functions:
  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler
    events:
      - http:
          method: get
          path: todos
          cors: true
          authorizer: Auth

  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          path: todos
          cors: true
          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: "arn:aws:dynamodb:us-east-1:879453799043:table/TodosTable/index/CreatedAtIndex"

  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          path: todos
          cors: true
          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: "arn:aws:dynamodb:us-east-1:879453799043:table/TodosTable"

  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    events:
      - http:
          method: patch
          path: todos/{todoId}
          cors: true
          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: "arn:aws:dynamodb:us-east-1:879453799043:table/TodosTable"

  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    events:
      - http:
          method: delete
          path: todos/{todoId}
          cors: true
          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: "arn:aws:dynamodb:us-east-1:879453799043:table/TodosTable"

  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          path: todos/{todoId}/attachment
          cors: true
          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource: "arn:aws:s3:::minh-todos-attachments/*"

resources:
  Resources:
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TODOS_TABLE}
        AttributeDefinitions:
          - AttributeName: "userId"
            AttributeType: "S"
          - AttributeName: "todoId"
            AttributeType: "S"
          - AttributeName: "createdAt"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userId"
            KeyType: "HASH"
          - AttributeName: "todoId"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.TODOS_CREATED_AT_INDEX}
            KeySchema:
              - AttributeName: "userId"
                KeyType: "HASH"
              - AttributeName: "createdAt"
                KeyType: "RANGE"
            Projection:
              ProjectionType: "ALL"
